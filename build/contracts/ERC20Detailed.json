{
  "contractName": "ERC20Detailed",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "_balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "burnable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "name": "_mintable",
          "type": "bool"
        },
        {
          "name": "_burnable",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200210238038062002102833981018060405281019080805182019291906020018051820192919060200180519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000c5336200019d640100000000026401000000009004565b8560059080519060200190620000dd9291906200049a565b508460069080519060200190620000f69291906200049a565b5083600760006101000a81548160ff021916908360ff1602179055508260038190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600760016101000a81548160ff02191690831515021790555080600760026101000a81548160ff02191690831515021790555050505050505062000549565b620001c181600462000207640100000000026200187a179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620002ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b620002c882826200039c640100000000026401000000009004565b1515156200033e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6163636f756e7420616c726561647920696e20726f6c6500000000000000000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004dd57805160ff19168380011785556200050e565b828001600101855582156200050e579182015b828111156200050d578251825591602001919060010190620004f0565b5b5090506200051d919062000521565b5090565b6200054691905b808211156200054257600081600090555060010162000528565b5090565b90565b611ba980620005596000396000f300608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461012d578063095ea7b3146101bd57806318160ddd1461022257806323b872dd1461024d578063313ce567146102d257806339509351146103035780633eaaf86b1461036857806340c10f191461039357806342966c68146103f85780634bf365df1461043d5780636ebcf6071461046c57806370a08231146104c35780638da5cb5b1461051a57806395d89b4114610571578063983b2d56146106015780639865027514610644578063a07c7ce41461065b578063a457c2d71461068a578063a9059cbb146106ef578063aa271e1a14610754578063dd62ed3e146107af578063f2fde38b14610826575b600080fd5b34801561013957600080fd5b50610142610869565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c957600080fd5b50610208600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090b565b604051808215151515815260200191505060405180910390f35b34801561022e57600080fd5b50610237610922565b6040518082815260200191505060405180910390f35b34801561025957600080fd5b506102b8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092c565b604051808215151515815260200191505060405180910390f35b3480156102de57600080fd5b506102e76109dd565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030f57600080fd5b5061034e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109f4565b604051808215151515815260200191505060405180910390f35b34801561037457600080fd5b5061037d610a99565b6040518082815260200191505060405180910390f35b34801561039f57600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9f565b604051808215151515815260200191505060405180910390f35b34801561040457600080fd5b5061042360048036038101908080359060200190929190505050610b36565b604051808215151515815260200191505060405180910390f35b34801561044957600080fd5b50610452610bcb565b604051808215151515815260200191505060405180910390f35b34801561047857600080fd5b506104ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bde565b6040518082815260200191505060405180910390f35b3480156104cf57600080fd5b50610504600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf6565b6040518082815260200191505060405180910390f35b34801561052657600080fd5b5061052f610c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057d57600080fd5b50610586610c64565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c65780820151818401526020810190506105ab565b50505050905090810190601f1680156105f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561060d57600080fd5b50610642600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d06565b005b34801561065057600080fd5b50610659610d26565b005b34801561066757600080fd5b50610670610d31565b604051808215151515815260200191505060405180910390f35b34801561069657600080fd5b506106d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d44565b604051808215151515815260200191505060405180910390f35b3480156106fb57600080fd5b5061073a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de9565b604051808215151515815260200191505060405180910390f35b34801561076057600080fd5b50610795600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e00565b604051808215151515815260200191505060405180910390f35b3480156107bb57600080fd5b50610810600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1d565b6040518082815260200191505060405180910390f35b34801561083257600080fd5b50610867600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea4565b005b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109015780601f106108d657610100808354040283529160200191610901565b820191906000526020600020905b8154815290600101906020018083116108e457829003601f168201915b5050505050905090565b6000610918338484611062565b6001905092915050565b6000600354905090565b60006109398484846111c5565b6109d284336109cd85600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b611062565b600190509392505050565b6000600760009054906101000a900460ff16905090565b6000610a8f3384610a8a85600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b611062565b6001905092915050565b60035481565b6000600760019054906101000a900460ff161515610b25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e206973206e6f74206d696e7461626c65000000000000000000000081525060200191505060405180910390fd5b610b2f83836113ca565b5092915050565b6000600760029054906101000a900460ff161515610bbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e206973206e6f74206275726e61626c65000000000000000000000081525060200191505060405180910390fd5b610bc5826113f4565b50919050565b600760019054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b5050505050905090565b610d0f33610e00565b1515610d1a57600080fd5b610d238161141d565b50565b610d2f33611477565b565b600760029054906101000a900460ff1681565b6000610ddf3384610dda85600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b611062565b6001905092915050565b6000610df63384846111c5565b6001905092915050565b6000610e168260046114d190919063ffffffff16565b9050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f53656e646572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fa457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561109e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156110da57600080fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561120157600080fd5b61125381600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112e881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111515156113a357fe5b818303905092915050565b600081830190508281101515156113c157fe5b80905092915050565b60006113d533610e00565b15156113e057600080fd5b6113ea83836115ce565b6001905092915050565b60006113ff33610e00565b151561140a57600080fd5b6114143383611724565b60019050919050565b61143181600461187a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61148b8160046119fc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160a57600080fd5b61161f816003546113ae90919063ffffffff16565b60038190555061167781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561176057600080fd5b6117758160035461139590919063ffffffff16565b6003819055506117cd81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561191f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b61192982826114d1565b15151561199e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6163636f756e7420616c726561647920696e20726f6c6500000000000000000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611aa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b611aab82826114d1565b1515611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6163636f756e74206e6f7420696e20726f6c650000000000000000000000000081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820e190859b1f79c19e49cc317f179decca39e4949ef35176bdc8dde9c2a8c925aa0029",
  "deployedBytecode": "0x608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461012d578063095ea7b3146101bd57806318160ddd1461022257806323b872dd1461024d578063313ce567146102d257806339509351146103035780633eaaf86b1461036857806340c10f191461039357806342966c68146103f85780634bf365df1461043d5780636ebcf6071461046c57806370a08231146104c35780638da5cb5b1461051a57806395d89b4114610571578063983b2d56146106015780639865027514610644578063a07c7ce41461065b578063a457c2d71461068a578063a9059cbb146106ef578063aa271e1a14610754578063dd62ed3e146107af578063f2fde38b14610826575b600080fd5b34801561013957600080fd5b50610142610869565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c957600080fd5b50610208600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090b565b604051808215151515815260200191505060405180910390f35b34801561022e57600080fd5b50610237610922565b6040518082815260200191505060405180910390f35b34801561025957600080fd5b506102b8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092c565b604051808215151515815260200191505060405180910390f35b3480156102de57600080fd5b506102e76109dd565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030f57600080fd5b5061034e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109f4565b604051808215151515815260200191505060405180910390f35b34801561037457600080fd5b5061037d610a99565b6040518082815260200191505060405180910390f35b34801561039f57600080fd5b506103de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9f565b604051808215151515815260200191505060405180910390f35b34801561040457600080fd5b5061042360048036038101908080359060200190929190505050610b36565b604051808215151515815260200191505060405180910390f35b34801561044957600080fd5b50610452610bcb565b604051808215151515815260200191505060405180910390f35b34801561047857600080fd5b506104ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bde565b6040518082815260200191505060405180910390f35b3480156104cf57600080fd5b50610504600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf6565b6040518082815260200191505060405180910390f35b34801561052657600080fd5b5061052f610c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057d57600080fd5b50610586610c64565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c65780820151818401526020810190506105ab565b50505050905090810190601f1680156105f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561060d57600080fd5b50610642600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d06565b005b34801561065057600080fd5b50610659610d26565b005b34801561066757600080fd5b50610670610d31565b604051808215151515815260200191505060405180910390f35b34801561069657600080fd5b506106d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d44565b604051808215151515815260200191505060405180910390f35b3480156106fb57600080fd5b5061073a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de9565b604051808215151515815260200191505060405180910390f35b34801561076057600080fd5b50610795600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e00565b604051808215151515815260200191505060405180910390f35b3480156107bb57600080fd5b50610810600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1d565b6040518082815260200191505060405180910390f35b34801561083257600080fd5b50610867600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea4565b005b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109015780601f106108d657610100808354040283529160200191610901565b820191906000526020600020905b8154815290600101906020018083116108e457829003601f168201915b5050505050905090565b6000610918338484611062565b6001905092915050565b6000600354905090565b60006109398484846111c5565b6109d284336109cd85600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b611062565b600190509392505050565b6000600760009054906101000a900460ff16905090565b6000610a8f3384610a8a85600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b611062565b6001905092915050565b60035481565b6000600760019054906101000a900460ff161515610b25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e206973206e6f74206d696e7461626c65000000000000000000000081525060200191505060405180910390fd5b610b2f83836113ca565b5092915050565b6000600760029054906101000a900460ff161515610bbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e206973206e6f74206275726e61626c65000000000000000000000081525060200191505060405180910390fd5b610bc5826113f4565b50919050565b600760019054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b5050505050905090565b610d0f33610e00565b1515610d1a57600080fd5b610d238161141d565b50565b610d2f33611477565b565b600760029054906101000a900460ff1681565b6000610ddf3384610dda85600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b611062565b6001905092915050565b6000610df63384846111c5565b6001905092915050565b6000610e168260046114d190919063ffffffff16565b9050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f53656e646572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fa457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561109e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156110da57600080fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561120157600080fd5b61125381600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112e881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111515156113a357fe5b818303905092915050565b600081830190508281101515156113c157fe5b80905092915050565b60006113d533610e00565b15156113e057600080fd5b6113ea83836115ce565b6001905092915050565b60006113ff33610e00565b151561140a57600080fd5b6114143383611724565b60019050919050565b61143181600461187a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61148b8160046119fc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561160a57600080fd5b61161f816003546113ae90919063ffffffff16565b60038190555061167781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113ae90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561176057600080fd5b6117758160035461139590919063ffffffff16565b6003819055506117cd81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561191f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b61192982826114d1565b15151561199e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6163636f756e7420616c726561647920696e20726f6c6500000000000000000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611aa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f616464726573732063616e6e6f7420626520307800000000000000000000000081525060200191505060405180910390fd5b611aab82826114d1565b1515611b1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6163636f756e74206e6f7420696e20726f6c650000000000000000000000000081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820e190859b1f79c19e49cc317f179decca39e4949ef35176bdc8dde9c2a8c925aa0029",
  "sourceMap": "302:1579:1:-;;;479:326;8:9:-1;5:2;;;30:1;27;20:12;5:2;479:326:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:10:19;529:5;;:18;;;;;;;;;;;;;;;;;;272:22:11;283:10;272;;;:22;;;:::i;:::-;612:4:1;604:5;:12;;;;;;;;;;;;:::i;:::-;;633:6;623:7;:16;;;;;;;;;;;;:::i;:::-;;658:8;646:9;;:20;;;;;;;;;;;;;;;;;;688:13;673:12;:28;;;;732:13;708:9;:21;718:10;708:21;;;;;;;;;;;;;;;:37;;;;763:9;752:8;;:20;;;;;;;;;;;;;;;;;;790:9;779:8;;:20;;;;;;;;;;;;;;;;;;479:326;;;;;;302:1579;;661:111:11;714:20;726:7;714;:11;;;;;;:20;;;;;:::i;:::-;758:7;746:20;;;;;;;;;;;;661:111;:::o;274:237:12:-;370:1;351:21;;:7;:21;;;;343:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:18;421:4;427:7;417:3;;;:18;;;:::i;:::-;416:19;408:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:4;476;:11;;:20;488:7;476:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:237;;:::o;920:189::-;992:4;1036:1;1017:21;;:7;:21;;;;1009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:4;:11;;:20;1093:7;1081:20;;;;;;;;;;;;;;;;;;;;;;;;;1074:27;;920:189;;;;:::o;302:1579:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "302:1579:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;862:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;862:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2830:148:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2830:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;983:91:0;;;;;;;;;;;;;;;;;;;;;;;3451:228;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3451:228:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:76:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:76:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4205:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4205:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;880:27:0;;;;;;;;;;;;;;;;;;;;;;;1423:151:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1423:151:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1745:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1745:133:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;427:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;751:45:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;751:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1293:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:19;;;;;;;;;;;;;;;;;;;;;;;;;;;990:73:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;990:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;492:86:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;492:86:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:71:11;;;;;;452:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4939:213:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4939:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2043:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:102:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;384:102:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1738:131:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1738:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:192:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;932:192:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:69:1;898:6;920:5;913:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:69;:::o;2830:148:0:-;2895:4;2912:36;2921:10;2933:7;2942:5;2912:8;:36::i;:::-;2966:4;2959:11;;2830:148;;;;:::o;983:91::-;1027:7;1054:12;;1047:19;;983:91;:::o;3451:228::-;3530:4;3547:26;3557:4;3563:2;3567:5;3547:9;:26::i;:::-;3584:65;3593:4;3599:10;3611:37;3642:5;3611:8;:14;3620:4;3611:14;;;;;;;;;;;;;;;:26;3626:10;3611:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3584:8;:65::i;:::-;3667:4;3660:11;;3451:228;;;;;:::o;1134:76:1:-;1174:5;1195:9;;;;;;;;;;;1188:16;;1134:76;:::o;4205:203:0:-;4285:4;4302:76;4311:10;4323:7;4332:45;4366:10;4332:8;:20;4341:10;4332:20;;;;;;;;;;;;;;;:29;4353:7;4332:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4302:8;:76::i;:::-;4396:4;4389:11;;4205:203;;;;:::o;880:27::-;;;;:::o;1423:151:1:-;1482:4;1504:8;;;;;;;;;;;1496:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:23;1556:3;1561:6;1545:10;:23::i;:::-;;1423:151;;;;:::o;1745:133::-;1791:4;1813:8;;;;;;;;;;;1805:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:18;1865:6;1854:10;:18::i;:::-;;1745:133;;;:::o;427:20::-;;;;;;;;;;;;;:::o;751:45:0:-;;;;;;;;;;;;;;;;;:::o;1293:106::-;1348:7;1375:9;:16;1385:5;1375:16;;;;;;;;;;;;;;;;1368:23;;1293:106;;;:::o;247:20:19:-;;;;;;;;;;;;;:::o;990:73:1:-;1028:6;1050:7;1043:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:73;:::o;492:86:11:-;343:20;352:10;343:8;:20::i;:::-;335:29;;;;;;;;553:19;564:7;553:10;:19::i;:::-;492:86;:::o;584:71::-;624:25;638:10;624:13;:25::i;:::-;584:71::o;452:20:1:-;;;;;;;;;;;;;:::o;4939:213:0:-;5024:4;5041:81;5050:10;5062:7;5071:50;5105:15;5071:8;:20;5080:10;5071:20;;;;;;;;;;;;;;;:29;5092:7;5071:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5041:8;:81::i;:::-;5140:4;5133:11;;4939:213;;;;:::o;2043:140::-;2104:4;2121:32;2131:10;2143:2;2147:5;2121:9;:32::i;:::-;2171:4;2164:11;;2043:140;;;;:::o;384:102:11:-;440:4;460:20;472:7;460;:11;;:20;;;;:::i;:::-;453:27;;384:102;;;:::o;1738:131:0:-;1810:7;1837:8;:15;1846:5;1837:15;;;;;;;;;;;;;;;:24;1853:7;1837:24;;;;;;;;;;;;;;;;1830:31;;1738:131;;;;:::o;932:192:19:-;700:5;;;;;;;;;;;686:19;;:10;:19;;;678:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:1;1013:22;;:8;:22;;;;1005:31;;;;;;;;1080:8;1052:37;;1073:5;;;;;;;;;;;1052:37;;;;;;;;;;;;1108:8;1100:5;;:16;;;;;;;;;;;;;;;;;;932:192;:::o;7038:254:0:-;7150:1;7131:21;;:7;:21;;;;7123:30;;;;;;;;7189:1;7172:19;;:5;:19;;;;7164:28;;;;;;;;7232:5;7205:8;:15;7214:5;7205:15;;;;;;;;;;;;;;;:24;7221:7;7205:24;;;;;;;;;;;;;;;:32;;;;7269:7;7253:31;;7262:5;7253:31;;;7278:5;7253:31;;;;;;;;;;;;;;;;;;7038:254;;;:::o;5379:262::-;5481:1;5467:16;;:2;:16;;;;5459:25;;;;;;;;5515:26;5535:5;5515:9;:15;5525:4;5515:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5497:9;:15;5507:4;5497:15;;;;;;;;;;;;;;;:44;;;;5568:24;5586:5;5568:9;:13;5578:2;5568:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5552:9;:13;5562:2;5552:13;;;;;;;;;;;;;;;:40;;;;5623:2;5608:25;;5617:4;5608:25;;;5627:5;5608:25;;;;;;;;;;;;;;;;;;5379:262;;;:::o;922:123:20:-;980:7;1012:1;1007;:6;;1000:14;;;;;;1036:1;1032;:5;1025:12;;922:123;;;;:::o;1114:141::-;1172:9;1202:1;1198;:5;1194:9;;1226:1;1221;:6;;1214:14;;;;;;1246:1;1239:8;;1114:141;;;;:::o;438:125:2:-;508:4;343:20:11;352:10;343:8;:20::i;:::-;335:29;;;;;;;;521:18:2;527:3;532:6;521:5;:18::i;:::-;553:4;546:11;;438:125;;;;:::o;760:119::-;817:4;343:20:11;352:10;343:8;:20::i;:::-;335:29;;;;;;;;830:25:2;836:10;848:6;830:5;:25::i;:::-;869:4;862:11;;760:119;;;:::o;661:111:11:-;714:20;726:7;714;:11;;:20;;;;:::i;:::-;758:7;746:20;;;;;;;;;;;;661:111;:::o;778:119::-;834:23;849:7;834;:14;;:23;;;;:::i;:::-;883:7;869:22;;;;;;;;;;;;778:119;:::o;920:189:12:-;992:4;1036:1;1017:21;;:7;:21;;;;1009:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:4;:11;;:20;1093:7;1081:20;;;;;;;;;;;;;;;;;;;;;;;;;1074:27;;920:189;;;;:::o;5993:269:0:-;6087:1;6068:21;;:7;:21;;;;6060:30;;;;;;;;6118:23;6135:5;6118:12;;:16;;:23;;;;:::i;:::-;6103:12;:38;;;;6173:29;6196:5;6173:9;:18;6183:7;6173:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6152:9;:18;6162:7;6152:18;;;;;;;;;;;;;;;:50;;;;6239:7;6218:36;;6235:1;6218:36;;;6248:5;6218:36;;;;;;;;;;;;;;;;;;5993:269;;:::o;6496:::-;6590:1;6571:21;;:7;:21;;;;6563:30;;;;;;;;6621:23;6638:5;6621:12;;:16;;:23;;;;:::i;:::-;6606:12;:38;;;;6676:29;6699:5;6676:9;:18;6686:7;6676:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6655:9;:18;6665:7;6655:18;;;;;;;;;;;;;;;:50;;;;6747:1;6721:36;;6730:7;6721:36;;;6751:5;6721:36;;;;;;;;;;;;;;;;;;6496:269;;:::o;274:237:12:-;370:1;351:21;;:7;:21;;;;343:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:18;421:4;427:7;417:3;:18::i;:::-;416:19;408:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:4;476;:11;;:20;488:7;476:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:237;;:::o;590:236::-;689:1;670:21;;:7;:21;;;;662:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:18;739:4;745:7;735:3;:18::i;:::-;727:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:5;790:4;:11;;:20;802:7;790:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;590:236;;:::o",
  "source": "pragma solidity ^0.4.25;\r\n\r\nimport \"./ERC20Mintable.sol\";\r\n\r\n/**\r\n * @title ERC20Detailed token\r\n * @dev The decimals are only for visualization purposes.\r\n * All the operations are done using the smallest and indivisible token unit,\r\n * just as on Ethereum all the operations are done in wei.\r\n */\r\n\r\ncontract ERC20Detailed is ERC20Mintable {\r\n  string private _name;\r\n  string private _symbol;\r\n  uint8 private _decimals;\r\n  bool public mintable;\r\n  bool public burnable;\r\n\r\n  constructor(string name, string symbol, uint8 decimals, uint256 initialSupply, bool _mintable, bool _burnable) public {\r\n    _name = name;\r\n    _symbol = symbol;\r\n    _decimals = decimals;\r\n    _totalSupply = initialSupply;\r\n    _balances[msg.sender] = initialSupply;\r\n    mintable = _mintable;\r\n    burnable = _burnable;\r\n  }\r\n\r\n  /**\r\n   * @return the name of the token.\r\n   */\r\n  function name() public view returns(string) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @return the symbol of the token.\r\n   */\r\n  function symbol() public view returns(string) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n   * @return the number of decimals of the token.\r\n   */\r\n  function decimals() public view returns(uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev mint function, checks if the contract is allowed to mint\r\n   * @param _to the receiver of the tokens when mint funtion is successful\r\n   * @param _value the amount of tokens to mint\r\n   */\r\n  function mint(address _to, uint256 _value) public returns (bool)  {\r\n    require(mintable, \"Token is not mintable\");\r\n    super.mint(_to, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev burn function, checks if the contract is allowed to burn, then burns from sender's account\r\n   * @param _value the amount of tokens to burn\r\n   */\r\n  function burn(uint256 _value) public returns (bool)  {\r\n    require(burnable, \"Token is not burnable\");\r\n    super.burn(_value);\r\n  }\r\n}\r\n",
  "sourcePath": "E:\\Ethereum\\METM\\MetamorphTokenCreation\\src\\app\\ethereum\\contracts\\ERC20\\ERC20Detailed.sol",
  "ast": {
    "absolutePath": "/E/Ethereum/METM/MetamorphTokenCreation/src/app/ethereum/contracts/ERC20/ERC20Detailed.sol",
    "exportedSymbols": {
      "ERC20Detailed": [
        513
      ]
    },
    "id": 514,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 387,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/E/Ethereum/METM/MetamorphTokenCreation/src/app/ethereum/contracts/ERC20/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 388,
        "nodeType": "ImportDirective",
        "scope": 514,
        "sourceUnit": 560,
        "src": "28:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 389,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 559,
              "src": "328:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$559",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 390,
            "nodeType": "InheritanceSpecifier",
            "src": "328:13:1"
          }
        ],
        "contractDependencies": [
          385,
          559,
          628,
          1615,
          2930
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Detailed token\r\n@dev The decimals are only for visualization purposes.\r\nAll the operations are done using the smallest and indivisible token unit,\r\njust as on Ethereum all the operations are done in wei.\r",
        "fullyImplemented": true,
        "id": 513,
        "linearizedBaseContracts": [
          513,
          559,
          1615,
          385,
          2930,
          628
        ],
        "name": "ERC20Detailed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 392,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "347:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 391,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "347:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 394,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "372:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 393,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "372:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 396,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "399:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 395,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "399:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 398,
            "name": "mintable",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "427:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 397,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "427:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 400,
            "name": "burnable",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "452:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 399,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "452:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "597:208:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 415,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "604:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "612:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "604:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "604:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "623:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "633:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "623:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "623:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "646:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "658:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "646:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "646:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "673:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 428,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "688:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "673:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "673:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "708:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3039,
                          "src": "718:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "718:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 435,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "732:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "708:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "708:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 438,
                      "name": "mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "752:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 439,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "763:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "752:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "752:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "779:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "_burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "790:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "779:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "779:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 447,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "491:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "504:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "519:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "535:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "name": "_mintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "558:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "name": "_burnable",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "574:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:99:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:1"
            },
            "scope": 513,
            "src": "479:326:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "906:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "920:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 451,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "913:12:1"
                }
              ]
            },
            "documentation": "@return the name of the token.\r",
            "id": 455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "898:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "897:8:1"
            },
            "scope": 513,
            "src": "862:69:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "1036:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 460,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 394,
                    "src": "1050:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 459,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "1043:14:1"
                }
              ]
            },
            "documentation": "@return the symbol of the token.\r",
            "id": 463,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "1028:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1027:8:1"
            },
            "scope": 513,
            "src": "990:73:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "1181:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 396,
                    "src": "1195:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 469,
                  "nodeType": "Return",
                  "src": "1188:16:1"
                }
              ]
            },
            "documentation": "@return the number of decimals of the token.\r",
            "id": 471,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1151:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "1174:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:7:1"
            },
            "scope": 513,
            "src": "1134:76:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1489:85:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "1504:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206973206e6f74206d696e7461626c65",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23f3ace66b8d754fa5b7a0f4b9fe4a9091b2f4973105274b0afda0922403883",
                          "typeString": "literal_string \"Token is not mintable\""
                        },
                        "value": "Token is not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23f3ace66b8d754fa5b7a0f4b9fe4a9091b2f4973105274b0afda0922403883",
                          "typeString": "literal_string \"Token is not mintable\""
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3042,
                        3043
                      ],
                      "referencedDeclaration": 3043,
                      "src": "1496:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1496:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 488,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "1556:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1561:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "1545:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Detailed_$513",
                          "typeString": "contract super ERC20Detailed"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 540,
                      "src": "1545:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:23:1"
                }
              ]
            },
            "documentation": "@dev mint function, checks if the contract is allowed to mint\r\n@param _to the receiver of the tokens when mint funtion is successful\r\n@param _value the amount of tokens to mint\r",
            "id": 493,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1437:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1450:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1436:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1482:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1481:6:1"
            },
            "scope": 513,
            "src": "1423:151:1",
            "stateMutability": "nonpayable",
            "superFunction": 540,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "1798:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 501,
                        "name": "burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1813:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206973206e6f74206275726e61626c65",
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0212e0fec906e096c7c36a5fc28f9263e2512e25200a177f82e25a996382f28d",
                          "typeString": "literal_string \"Token is not burnable\""
                        },
                        "value": "Token is not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0212e0fec906e096c7c36a5fc28f9263e2512e25200a177f82e25a996382f28d",
                          "typeString": "literal_string \"Token is not burnable\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3042,
                        3043
                      ],
                      "referencedDeclaration": 3043,
                      "src": "1805:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1865:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 505,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "1854:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Detailed_$513",
                          "typeString": "contract super ERC20Detailed"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 558,
                      "src": "1854:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:18:1"
                }
              ]
            },
            "documentation": "@dev burn function, checks if the contract is allowed to burn, then burns from sender's account\r\n@param _value the amount of tokens to burn\r",
            "id": 512,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "1759:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1758:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "1791:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1790:6:1"
            },
            "scope": 513,
            "src": "1745:133:1",
            "stateMutability": "nonpayable",
            "superFunction": 558,
            "visibility": "public"
          }
        ],
        "scope": 514,
        "src": "302:1579:1"
      }
    ],
    "src": "0:1883:1"
  },
  "legacyAST": {
    "absolutePath": "/E/Ethereum/METM/MetamorphTokenCreation/src/app/ethereum/contracts/ERC20/ERC20Detailed.sol",
    "exportedSymbols": {
      "ERC20Detailed": [
        513
      ]
    },
    "id": 514,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 387,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/E/Ethereum/METM/MetamorphTokenCreation/src/app/ethereum/contracts/ERC20/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 388,
        "nodeType": "ImportDirective",
        "scope": 514,
        "sourceUnit": 560,
        "src": "28:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 389,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 559,
              "src": "328:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$559",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 390,
            "nodeType": "InheritanceSpecifier",
            "src": "328:13:1"
          }
        ],
        "contractDependencies": [
          385,
          559,
          628,
          1615,
          2930
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Detailed token\r\n@dev The decimals are only for visualization purposes.\r\nAll the operations are done using the smallest and indivisible token unit,\r\njust as on Ethereum all the operations are done in wei.\r",
        "fullyImplemented": true,
        "id": 513,
        "linearizedBaseContracts": [
          513,
          559,
          1615,
          385,
          2930,
          628
        ],
        "name": "ERC20Detailed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 392,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "347:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 391,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "347:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 394,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "372:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 393,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "372:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 396,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "399:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 395,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "399:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 398,
            "name": "mintable",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "427:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 397,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "427:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 400,
            "name": "burnable",
            "nodeType": "VariableDeclaration",
            "scope": 513,
            "src": "452:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 399,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "452:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "597:208:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 415,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "604:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "612:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "604:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "604:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "623:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "633:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "623:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "623:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "646:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "658:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "646:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "646:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "673:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 428,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "688:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "673:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "673:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "708:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3039,
                          "src": "718:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "718:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 435,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "732:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "708:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "708:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 438,
                      "name": "mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "752:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 439,
                      "name": "_mintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "763:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "752:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "752:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "779:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "_burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "790:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "779:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "779:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 447,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "491:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "504:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "519:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "535:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "name": "_mintable",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "558:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "name": "_burnable",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "574:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:99:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:1"
            },
            "scope": 513,
            "src": "479:326:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "906:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 452,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "920:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 451,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "913:12:1"
                }
              ]
            },
            "documentation": "@return the name of the token.\r",
            "id": 455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "898:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "897:8:1"
            },
            "scope": 513,
            "src": "862:69:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "1036:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 460,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 394,
                    "src": "1050:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 459,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "1043:14:1"
                }
              ]
            },
            "documentation": "@return the symbol of the token.\r",
            "id": 463,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "1028:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1027:8:1"
            },
            "scope": 513,
            "src": "990:73:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "1181:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 396,
                    "src": "1195:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 469,
                  "nodeType": "Return",
                  "src": "1188:16:1"
                }
              ]
            },
            "documentation": "@return the number of decimals of the token.\r",
            "id": 471,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1151:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "1174:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:7:1"
            },
            "scope": 513,
            "src": "1134:76:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1489:85:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "1504:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206973206e6f74206d696e7461626c65",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23f3ace66b8d754fa5b7a0f4b9fe4a9091b2f4973105274b0afda0922403883",
                          "typeString": "literal_string \"Token is not mintable\""
                        },
                        "value": "Token is not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23f3ace66b8d754fa5b7a0f4b9fe4a9091b2f4973105274b0afda0922403883",
                          "typeString": "literal_string \"Token is not mintable\""
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3042,
                        3043
                      ],
                      "referencedDeclaration": 3043,
                      "src": "1496:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1496:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 488,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "1556:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1561:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "1545:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Detailed_$513",
                          "typeString": "contract super ERC20Detailed"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 540,
                      "src": "1545:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:23:1"
                }
              ]
            },
            "documentation": "@dev mint function, checks if the contract is allowed to mint\r\n@param _to the receiver of the tokens when mint funtion is successful\r\n@param _value the amount of tokens to mint\r",
            "id": 493,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1437:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1450:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1436:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1482:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1481:6:1"
            },
            "scope": 513,
            "src": "1423:151:1",
            "stateMutability": "nonpayable",
            "superFunction": 540,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "1798:80:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 501,
                        "name": "burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "1813:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206973206e6f74206275726e61626c65",
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0212e0fec906e096c7c36a5fc28f9263e2512e25200a177f82e25a996382f28d",
                          "typeString": "literal_string \"Token is not burnable\""
                        },
                        "value": "Token is not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0212e0fec906e096c7c36a5fc28f9263e2512e25200a177f82e25a996382f28d",
                          "typeString": "literal_string \"Token is not burnable\""
                        }
                      ],
                      "id": 500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3042,
                        3043
                      ],
                      "referencedDeclaration": 3043,
                      "src": "1805:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1865:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 505,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "1854:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Detailed_$513",
                          "typeString": "contract super ERC20Detailed"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 558,
                      "src": "1854:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:18:1"
                }
              ]
            },
            "documentation": "@dev burn function, checks if the contract is allowed to burn, then burns from sender's account\r\n@param _value the amount of tokens to burn\r",
            "id": 512,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "1759:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1758:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "1791:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1790:6:1"
            },
            "scope": 513,
            "src": "1745:133:1",
            "stateMutability": "nonpayable",
            "superFunction": 558,
            "visibility": "public"
          }
        ],
        "scope": 514,
        "src": "302:1579:1"
      }
    ],
    "src": "0:1883:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-07-17T04:05:16.011Z"
}